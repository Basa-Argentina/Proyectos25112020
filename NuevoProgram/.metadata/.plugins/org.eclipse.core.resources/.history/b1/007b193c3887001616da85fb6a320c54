package com.pruebi;

import java.io.File;
//import java.io.InputStream;
//import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
//import java.sql.Statement;
//import java.util.Scanner;

import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

//import com.basa.sql.Global;
;

public class LectorXML {
	
	public static void Insertar(){
		
		File dir = new File("c:/Temp/FAE/LEE/");
		   
		String[] ficheros = dir.list();
		   
		if (ficheros == null)
			System.out.println("No hay ficheros en el directorio especificado");
		
		else { 
			for (int x=0;x<ficheros.length;x++){
				System.out.println(ficheros[x]);
				main1(ficheros[x]);
			}
		}
	}
	
	
  public static void main1 (String ficheros) {

    try {
    String Abrir = "c:/Temp/FAE/LEE/";
    String AbrirFile  = Abrir + ficheros ;
	//File fXmlFile = new File("c:/Temp/FAE/LEE/2011_12_186_4452.8.faeout");
	File fXmlFile = new File (AbrirFile);	
	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
	DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
	Document doc = dBuilder.parse(fXmlFile);

	//optional, but recommended
	//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
	doc.getDocumentElement().normalize();

	System.out.println("Root element :" + doc.getDocumentElement().getNodeName());

	NodeList nList = doc.getElementsByTagName("HOJA");
//	NodeList nList1 = doc.getElementsByTagName("GUIDFactura");

	System.out.println("----------------------------");

	for (int temp = 0; temp < nList.getLength(); temp++) {

		Node nNode = nList.item(temp);
		//for (int temp1 = 0; temp1 < nList1.getLength(); temp1++) {
			//Node nNode1 = nList1.item(temp);
		
		

		System.out.println("\nCurrent Element :" + nNode.getNodeName());

		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
			//if (nNode1.getNodeType() == Node.ELEMENT_NODE) {
			
			//id, descipcion, fecha1, fecha2, , numero1, numero2, texto1, texto2,
			//clasificacion_documental_id, elemento_id, lote_referencia_id, prefijoCodigoTipoElemento, ordenRearchivo,
			//pathArchivoDigital, pathLegajo, fechaHora

			Element eElement = (Element) nNode;
			  Connection conn;
		        try {
		          // String idcom  = (eElement.getElementsByTagName("IDComprobante").item(0).getTextContent());
		           
		       //    int idcomlisto = Integer.parseInt(idcom);
		         
		            String cae  = (eElement.getElementsByTagName("fecha1").item(0).getTextContent());
		            String fechavtocae  = (eElement.getElementsByTagName("fecha2").item(0).getTextContent());
		            String codAFIP  = (eElement.getElementsByTagName("numero1").item(0).getTextContent());
		            String MERROR  = (eElement.getElementsByTagName("numero2").item(0).getTextContent());
		            String CERROR  = (eElement.getElementsByTagName("texto1").item(0).getTextContent());
		            String NCOMPRO  = (eElement.getElementsByTagName("texto2").item(0).getTextContent());
		            String MERROR1  = (eElement.getElementsByTagName("clasificacion_documental_id").item(0).getTextContent());
		            String CERROR1  = (eElement.getElementsByTagName("NumeroEtiqueta").item(0).getTextContent());
		            String NCOMPRO1  = (eElement.getElementsByTagName("descripcion").item(0).getTextContent());
		           
		            System.out.println(cae);
		            System.out.println(fechavtocae);
		            System.out.println(codAFIP);
		            System.out.println(MERROR);
		            System.out.println(CERROR);
		            System.out.println(NCOMPRO);
		            System.out.println(MERROR1);
		            System.out.println(CERROR1);
		            System.out.println(NCOMPRO1);
		          
		            System.out.println("Fecha1 : " + eElement.getElementsByTagName("fecha1").item(0).getTextContent());
					System.out.println("Fecha2 : " + eElement.getElementsByTagName("fecha2").item(0).getTextContent());
					System.out.println("Numero1 : " + eElement.getElementsByTagName("numero1").item(0).getTextContent());
					System.out.println("Numero2 : " + eElement.getElementsByTagName("numero2").item(0).getTextContent());
					System.out.println("Texto1 : " + eElement.getElementsByTagName("texto1").item(0).getTextContent());
					System.out.println("Texto2 : " + eElement.getElementsByTagName("texto2").item(0).getTextContent());
					System.out.println("Clasificacion Documental : " + eElement.getElementsByTagName("clasificacion_documental_id").item(0).getTextContent());
					System.out.println("NumeroEtiqueta : " + eElement.getElementsByTagName("NumeroEtiqueta").item(0).getTextContent());
					System.out.println("Descripcion : " + eElement.getElementsByTagName("descripcion").item(0).getTextContent());
		           
		         //  String dos = (eElement.getElementsByTagName("").item(0).getTextContent()));
		      //     String Nafip  = (eElement.getElementsByTagName("NotificacionAFIP").item(0).getTextContent());
		        	
		        //   Insertar1( idcomlisto, cae, fechavtocae, codAFIP, MERROR, CERROR, NCOMPRO);
		           /*  System.out.println(idcom);
		        	Class.forName(Conect.forName);
		            conn = DriverManager.getConnection(Conect.url);

		            PreparedStatement stmt = conn.prepareStatement("insert into recepcion_factura_electronica (idcomprobante, CAE, FechaVtoCAE, CodigoAFIP, MotivoError, CodigoError, NumeroComprobante) values (?,?,?,?,?,?,?)");
		            stmt.setLong(1, idcomlisto);
		            stmt.setString(2, cae);
		            stmt.setString(3, fechavtocae);
		            stmt.setString(4, codAFIP);
		            stmt.setString(5, MERROR);
		            stmt.setString(6, CERROR);
		            stmt.setString(7, NCOMPRO);
		            stmt.executeUpdate();

		            stmt.close();
		            conn.close();*/
		            
		        } catch (Exception e) {
		          //  JOptionPane.showMessageDialog(null, "Exception Insertar recepcion_factura_electronica: " + e.getMessage()+e.getCause());
		            return;
		        }

			
			
		}
	}
		  } catch (Exception e) {
	e.printStackTrace();
    }
	
  }
 
//public static void Insertar1(int idcomlisto, String cae, String fechavtocae, String codAFIP, String mERROR, String cERROR, String nCOMPRO){
//	
//	  Connection conn;
//	
//    //Statement sta = conn.createStatement();
//    //Conects
//  /*  String sqlComando = "insert into recepcion_factura_electronica "
//           + "(idcomprobante, CAE, FechaVtoCAE, CodigoAFIP, MotivoError, CodigoError, NumeroComprobante, NotificacionAFIP) "
//            + " values (  )";*/
//    try {
//    	Class.forName(Conect.forName);
//        conn = DriverManager.getConnection(Conect.url);
//    PreparedStatement stmt = conn.prepareStatement("insert into recepcion_factura_electronica (idcomprobante, CAE, FechaVtoCAE, CodigoAFIP, MotivoError, CodigoError, NumeroComprobante) values (?,?,?,?,?,?,?)");
//    stmt.setLong(1, idcomlisto);
//    stmt.setString(2, cae);
//    stmt.setString(3, fechavtocae);
//    stmt.setString(4, codAFIP);
//    stmt.setString(5, mERROR);
//    stmt.setString(6, cERROR);
//    stmt.setString(7, nCOMPRO);
//    stmt.executeUpdate();
//
//  //System.out.println(sqlComando);
//  //  sta.execute(sqlComando);
//    															
//    stmt.close();
//    conn.close();
//    
//
//} catch (Exception e) {
//    JOptionPane.showMessageDialog(null, "Exception Insertar recepcion_factura_electronica: " + e.getMessage()+e.getCause());
//    return;
//}
//	
//}

public static void main(String[] args) {
	Insertar();
}
}