package supervielle;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class DemonioEV {
	
	public static void Selectsql() throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException, IOException{
		Connection con = null;
	    PreparedStatement stmt = null;
		String surl="jdbc:sqlserver://222.15.19.150:1433;DatabaseName=basa;SelectMethod=cursor;username=sa;password=Sicuyo123"; 
		String sDriver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
				  
		try {
			  Class.forName(sDriver).newInstance();    
			  con = DriverManager.getConnection(surl);
			 
			  try {
				
				    stmt = con.prepareStatement( " SELECT  id, descripcion, fecha1, fecha2, indice_individual, numero1, numero2, texto1, texto2, clasificacion_documental_id, elemento_id, lote_referencia_id, descripcion_rearchivo, referencia_rearchivo_id, \r\n" + 
				    		"                         prefijoCodigoTipoElemento, ordenRearchivo, pathArchivoDigital, pathLegajo, fechaHora, codigoUsuario, descripcionTarea, estadoTarea, pathLegajo1\r\n" + 
				    		"FROM            referencia\r\n" + 
				    		"WHERE        (indice_individual = 0) AND (clasificacion_documental_id IN (71052, 71053, 71054, 71055, 71124, 71125, 71126, 71127, 81267, 81268, 81269, 81361, 81362, 81363, 81364, 81365, 81366, 81367, 81368, 81369, 81370, 81371, \r\n" + 
				    		"                         81374, 81375, 81377, 81378, 81379, 81380, 81381, 81382, 81383, 81384, 81385, 81386, 81387, 81388, 81389, 81390, 81391, 81392, 81393, 81394, 81395, 81396, 81397, 81398, 81399, 81400, 81408, 81409, 81410, 81411, \r\n" + 
				    		"                         81412, 81413, 81414, 81415, 81416, 81417, 81418, 81419, 81420, 81421, 81422, 81423, 81424, 81425, 81426, 81427, 81428, 81429, 81430, 81431, 81432, 81438, 81439, 81512, 81513, 81514, 81515, 81516, 81517, 81518, \r\n" + 
				    		"                         81519, 81520, 81521, 81522, 81523, 81524, 81525, 81526, 81527, 81528, 81529, 81530, 81531, 81532, 81533, 81534, 81535, 81542, 81543, 81544, 81545, 81546, 81547, 81548, 81549, 81550, 81551, 81552, 81553, 81554, \r\n" + 
				    		"                         81555, 81556, 81557, 81558, 81559, 81560, 81561, 81562, 81564, 81567, 81571, 81572, 81573, 81574, 81575, 81576, 81577, 81578, 81579, 81580, 81581, 81582, 81583, 81585, 81588, 81589, 81590, 81591, 81592, 81593, \r\n" + 
				    		"                         81594, 81595, 81596, 81597, 81598, 81599, 81600, 81601, 81602, 81603, 81604, 81605, 81606, 81607, 81608, 81609, 81610, 81611, 81618, 81619, 81620, 81621, 81622, 81623, 81624, 81625, 81626, 81627, 81628, 81629, \r\n" + 
				    		"                         81630, 81631, 81632, 81633, 81634, 81635, 81636, 81637, 81638, 81640, 81642, 81646, 81647, 81648, 81649, 81650, 81651, 81652, 81653, 81654, 81655, 81656, 81657, 81658, 81659, 81661, 81664, 81665, 81666, 81667, \r\n" + 
				    		"                         81668, 81669, 81670, 81671, 81672, 81673, 81674, 81675, 81676, 81677, 81678, 81679, 81680, 81681, 81682, 81683, 81684, 81685, 81686, 81687, 81694, 81695, 81696, 81697, 81698, 81699, 81700, 81701, 81702, 81703, \r\n" + 
				    		"                         81704, 81705, 81706, 81707, 81708, 81709, 81710, 81711, 81712, 81713, 81714, 81716, 81718, 81722, 81723, 81724, 81725, 81726, 81727, 81728, 81729, 81730, 81731, 81732, 81733, 81734, 81735, 81737, 81822, 81823, \r\n" + 
				    		"                         81824, 81825, 81863, 81864, 81865, 81866, 81867, 81868, 81869, 81870, 81871, 81872, 81873, 81874, 81875, 81876, 81877, 81878, 81879, 81880, 81881, 81882, 81883, 81884, 81885, 81886, 81887, 81888, 81889, 81890, \r\n" + 
				    		"                         81891, 81892, 81893, 81894, 81895, 81896, 81897, 81898, 81899, 81900, 81901, 81902, 81903, 81904, 81905, 81906, 81907, 81908, 81909, 81910, 81911, 81912, 81913, 81914, 81915, 81916, 81917, 81918, 81919, 81920, \r\n" + 
				    		"                         81921, 81922, 81923, 81924, 81925, 81926, 81927, 81928, 81929, 81930, 81931, 81932, 81933, 81934, 81935, 81955))");
				
			 
				    
			    ResultSet rs = stmt.executeQuery();
			 
				
			    while (rs.next()){
			
			      System.out.println (rs.getString("elemento_id"));
			 

			   
			     //Para Legajos Godoy Cruz 
			     // System.out.println("FK_LEGAJO_ETIQUETA");
			  String id = (rs.getString("id"));
			  String idCaja = (rs.getString("elemento_id"));
			  System.out.println(id + "   /   " + idCaja);
			//  String etiqueta = (rs.getString("codigo"));
			//  String numero1 = (rs.getString("numero1"));
			//  String numero2 = (rs.getString("numero2"));
			//  String texto1 = (rs.getString("texto1"));
			//  String texto2 = (rs.getString("texto2"));
			//  String caja = (rs.getString("caja"));
			//  String nombre = (rs.getString("nombre"));
			  
			
			String pasoexcel = "Green/Administracion/";
			//..updateEstado3(id,nombre);
		
			
/*					  switch(clasifD){
 
					
					  case "71115" :
						  pasoexcel = "Green/Personal";
					
						//  moverimagen( tipo , texto , pathLegajo );
			
						  break;
					  case "71116":
						  pasoexcel = "Green/Administracion";
						
						 
					//	  moverimagen( tipo , texto , pathLegajo );
						  break;
					  case "71117":
						  pasoexcel = "Green/Otros";
							
					//	  moverimagen( tipo , texto , pathLegajo );
						  
						  break;

						  
					  } */
			//  escribirexcel(etiqueta,id,dpaso);
			 
			    
			    }
			    } catch (SQLException sqle) { 
			      System.out.println("Error en la ejecución:" 
			            + sqle.getErrorCode() + " " + sqle.getMessage());    
			}
		} finally {
		   	
		}
		
	}

	
	public static void main(String[] args) throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException, IOException {
		Selectsql();
	}

}
